// SPDX-License-Identifier: GPL-3.0-only
// This file is auto-generated. DO NOT EDIT!

#ifndef BALLTZE_API__HEK__TAG_DEFINITION__UI_WIDGET_DEFINITION_HPP
#define BALLTZE_API__HEK__TAG_DEFINITION__UI_WIDGET_DEFINITION_HPP

#include "../../memory.hpp"
#include "../tag_file.hpp"
#include "enum.hpp"
#include "bitfield.hpp"

#pragma pack(push)
#pragma pack(1)


namespace Balltze::HEK::TagDefinitions { 
	enum UIGameDataInputReferenceFunction : std::uint16_t {
		U_I_GAME_DATA_INPUT_REFERENCE_FUNCTION_NULL = 0,
		U_I_GAME_DATA_INPUT_REFERENCE_FUNCTION_PLAYER_SETTINGS_MENU_UPDATE_DESC,
		U_I_GAME_DATA_INPUT_REFERENCE_FUNCTION_UNUSED,
		U_I_GAME_DATA_INPUT_REFERENCE_FUNCTION_PLAYLIST_SETTINGS_MENU_UPDATE_DESC,
		U_I_GAME_DATA_INPUT_REFERENCE_FUNCTION_GAMETYPE_SELECT_MENU_UPDATE_DESC,
		U_I_GAME_DATA_INPUT_REFERENCE_FUNCTION_MULTIPLAYER_TYPE_MENU_UPDATE_DESC,
		U_I_GAME_DATA_INPUT_REFERENCE_FUNCTION_SOLO_LEVEL_SELECT_UPDATE,
		U_I_GAME_DATA_INPUT_REFERENCE_FUNCTION_DIFFICULTY_MENU_UPDATE_DESC,
		U_I_GAME_DATA_INPUT_REFERENCE_FUNCTION_BUILD_NUMBER_TEXTBOX_ONLY,
		U_I_GAME_DATA_INPUT_REFERENCE_FUNCTION_SERVER_LIST_UPDATE,
		U_I_GAME_DATA_INPUT_REFERENCE_FUNCTION_NETWORK_PREGAME_STATUS_UPDATE,
		U_I_GAME_DATA_INPUT_REFERENCE_FUNCTION_SPLITSCREEN_PREGAME_STATUS_UPDATE,
		U_I_GAME_DATA_INPUT_REFERENCE_FUNCTION_NET_SPLITSCREEN_PREJOIN_PLAYERS,
		U_I_GAME_DATA_INPUT_REFERENCE_FUNCTION_MP_PROFILE_LIST_UPDATE,
		U_I_GAME_DATA_INPUT_REFERENCE_FUNCTION_3WIDE_PLAYER_PROFILE_LIST_UPDATE,
		U_I_GAME_DATA_INPUT_REFERENCE_FUNCTION_PLYR_PROF_EDIT_SELECT_MENU_UPD8,
		U_I_GAME_DATA_INPUT_REFERENCE_FUNCTION_PLAYER_PROFILE_SMALL_MENU_UPDATE,
		U_I_GAME_DATA_INPUT_REFERENCE_FUNCTION_GAME_SETTINGS_LISTS_TEXT_UPDATE,
		U_I_GAME_DATA_INPUT_REFERENCE_FUNCTION_SOLO_GAME_OBJECTIVE_TEXT,
		U_I_GAME_DATA_INPUT_REFERENCE_FUNCTION_COLOR_PICKER_UPDATE,
		U_I_GAME_DATA_INPUT_REFERENCE_FUNCTION_GAME_SETTINGS_LISTS_PIC_UPDATE,
		U_I_GAME_DATA_INPUT_REFERENCE_FUNCTION_MAIN_MENU_FAKE_ANIMATE,
		U_I_GAME_DATA_INPUT_REFERENCE_FUNCTION_MP_LEVEL_SELECT_UPDATE,
		U_I_GAME_DATA_INPUT_REFERENCE_FUNCTION_GET_ACTIVE_PLYR_PROFILE_NAME,
		U_I_GAME_DATA_INPUT_REFERENCE_FUNCTION_GET_EDIT_PLYR_PROFILE_NAME,
		U_I_GAME_DATA_INPUT_REFERENCE_FUNCTION_GET_EDIT_GAME_SETTINGS_NAME,
		U_I_GAME_DATA_INPUT_REFERENCE_FUNCTION_GET_ACTIVE_PLYR_PROFILE_COLOR,
		U_I_GAME_DATA_INPUT_REFERENCE_FUNCTION_MP_SET_TEXTBOX_MAP_NAME,
		U_I_GAME_DATA_INPUT_REFERENCE_FUNCTION_MP_SET_TEXTBOX_GAME_RULESET,
		U_I_GAME_DATA_INPUT_REFERENCE_FUNCTION_MP_SET_TEXTBOX_TEAMS_NOTEAMS,
		U_I_GAME_DATA_INPUT_REFERENCE_FUNCTION_MP_SET_TEXTBOX_SCORE_LIMIT,
		U_I_GAME_DATA_INPUT_REFERENCE_FUNCTION_MP_SET_TEXTBOX_SCORE_LIMIT_TYPE,
		U_I_GAME_DATA_INPUT_REFERENCE_FUNCTION_MP_SET_BITMAP_FOR_MAP,
		U_I_GAME_DATA_INPUT_REFERENCE_FUNCTION_MP_SET_BITMAP_FOR_RULESET,
		U_I_GAME_DATA_INPUT_REFERENCE_FUNCTION_MP_SET_TEXTBOX,
		U_I_GAME_DATA_INPUT_REFERENCE_FUNCTION_MP_EDIT_PROFILE_SET_RULE_TEXT,
		U_I_GAME_DATA_INPUT_REFERENCE_FUNCTION_SYSTEM_LINK_STATUS_CHECK,
		U_I_GAME_DATA_INPUT_REFERENCE_FUNCTION_MP_GAME_DIRECTIONS,
		U_I_GAME_DATA_INPUT_REFERENCE_FUNCTION_TEAMS_NO_TEAMS_BITMAP_UPDATE,
		U_I_GAME_DATA_INPUT_REFERENCE_FUNCTION_WARN_IF_DIFF_WILL_NUKE_SAVED_GAME,
		U_I_GAME_DATA_INPUT_REFERENCE_FUNCTION_DIM_IF_NO_NET_CABLE,
		U_I_GAME_DATA_INPUT_REFERENCE_FUNCTION_PAUSE_GAME_SET_TEXTBOX_INVERTED,
		U_I_GAME_DATA_INPUT_REFERENCE_FUNCTION_DIM_UNLESS_TWO_CONTROLLERS,
		U_I_GAME_DATA_INPUT_REFERENCE_FUNCTION_CONTROLS_UPDATE_MENU,
		U_I_GAME_DATA_INPUT_REFERENCE_FUNCTION_VIDEO_MENU_UPDATE,
		U_I_GAME_DATA_INPUT_REFERENCE_FUNCTION_GAMESPY_SCREEN_UPDATE,
		U_I_GAME_DATA_INPUT_REFERENCE_FUNCTION_COMMON_BUTTON_BAR_UPDATE,
		U_I_GAME_DATA_INPUT_REFERENCE_FUNCTION_GAMEPAD_UPDATE_MENU,
		U_I_GAME_DATA_INPUT_REFERENCE_FUNCTION_SERVER_SETTINGS_UPDATE,
		U_I_GAME_DATA_INPUT_REFERENCE_FUNCTION_AUDIO_MENU_UPDATE,
		U_I_GAME_DATA_INPUT_REFERENCE_FUNCTION_MP_PROF_VEHICLES_UPDATE,
		U_I_GAME_DATA_INPUT_REFERENCE_FUNCTION_SOLO_MAP_LIST_UPDATE,
		U_I_GAME_DATA_INPUT_REFERENCE_FUNCTION_MP_MAP_LIST_UPDATE,
		U_I_GAME_DATA_INPUT_REFERENCE_FUNCTION_GT_SELECT_LIST_UPDATE,
		U_I_GAME_DATA_INPUT_REFERENCE_FUNCTION_GT_EDIT_LIST_UPDATE,
		U_I_GAME_DATA_INPUT_REFERENCE_FUNCTION_LOAD_GAME_LIST_UPDATE,
		U_I_GAME_DATA_INPUT_REFERENCE_FUNCTION_CHECKING_FOR_UPDATES,
		U_I_GAME_DATA_INPUT_REFERENCE_FUNCTION_DIRECT_IP_CONNECT_UPDATE,
		U_I_GAME_DATA_INPUT_REFERENCE_FUNCTION_NETWORK_SETTINGS_UPDATE,
	};

	enum UIEventType : std::uint16_t {
		U_I_EVENT_TYPE_A_BUTTON = 0,
		U_I_EVENT_TYPE_B_BUTTON,
		U_I_EVENT_TYPE_X_BUTTON,
		U_I_EVENT_TYPE_Y_BUTTON,
		U_I_EVENT_TYPE_BLACK_BUTTON,
		U_I_EVENT_TYPE_WHITE_BUTTON,
		U_I_EVENT_TYPE_LEFT_TRIGGER,
		U_I_EVENT_TYPE_RIGHT_TRIGGER,
		U_I_EVENT_TYPE_DPAD_UP,
		U_I_EVENT_TYPE_DPAD_DOWN,
		U_I_EVENT_TYPE_DPAD_LEFT,
		U_I_EVENT_TYPE_DPAD_RIGHT,
		U_I_EVENT_TYPE_START_BUTTON,
		U_I_EVENT_TYPE_BACK_BUTTON,
		U_I_EVENT_TYPE_LEFT_THUMB,
		U_I_EVENT_TYPE_RIGHT_THUMB,
		U_I_EVENT_TYPE_LEFT_ANALOG_STICK_UP,
		U_I_EVENT_TYPE_LEFT_ANALOG_STICK_DOWN,
		U_I_EVENT_TYPE_LEFT_ANALOG_STICK_LEFT,
		U_I_EVENT_TYPE_LEFT_ANALOG_STICK_RIGHT,
		U_I_EVENT_TYPE_LEFT_ANALOG_STICK_UP_1,
		U_I_EVENT_TYPE_RIGHT_ANALOG_STICK_DOWN,
		U_I_EVENT_TYPE_RIGHT_ANALOG_STICK_LEFT,
		U_I_EVENT_TYPE_RIGHT_ANALOG_STICK_RIGHT,
		U_I_EVENT_TYPE_CREATED,
		U_I_EVENT_TYPE_DELETED,
		U_I_EVENT_TYPE_GET_FOCUS,
		U_I_EVENT_TYPE_LOSE_FOCUS,
		U_I_EVENT_TYPE_LEFT_MOUSE,
		U_I_EVENT_TYPE_MIDDLE_MOUSE,
		U_I_EVENT_TYPE_RIGHT_MOUSE,
		U_I_EVENT_TYPE_DOUBLE_CLICK,
		U_I_EVENT_TYPE_CUSTOM_ACTIVATION,
		U_I_EVENT_TYPE_POST_RENDER,
	};

	enum UIEventHandlerReferenceFunction : std::uint16_t {
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_NULL = 0,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_LIST_GOTO_NEXT_ITEM,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_LIST_GOTO_PREVIOUS_ITEM,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_UNUSED,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_UNUSED1,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_INITIALIZE_SP_LEVEL_LIST_SOLO,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_INITIALIZE_SP_LEVEL_LIST_COOP,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_DISPOSE_SP_LEVEL_LIST,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_SOLO_LEVEL_SET_MAP,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_SET_DIFFICULTY,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_START_NEW_GAME,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_PAUSE_GAME_RESTART_AT_CHECKPOINT,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_PAUSE_GAME_RESTART_LEVEL,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_PAUSE_GAME_RETURN_TO_MAIN_MENU,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_CLEAR_MULTIPLAYER_PLAYER_JOINS,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_JOIN_CONTROLLER_TO_MP_GAME,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_INITIALIZE_NET_GAME_SERVER_LIST,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_START_NETWORK_GAME_SERVER,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_DISPOSE_NET_GAME_SERVER_LIST,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_SHUTDOWN_NETWORK_GAME,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_NET_GAME_JOIN_FROM_SERVER_LIST,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_SPLIT_SCREEN_GAME_INITIALIZE,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_COOP_GAME_INITIALIZE,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_MAIN_MENU_INTIALIZE,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_MP_TYPE_MENU_INITIALIZE,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_PICK_PLAY_STAGE_FOR_QUICK_START,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_MP_LEVEL_LIST_INITIALIZE,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_MP_LEVEL_LIST_DISPOSE,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_MP_LEVEL_SELECT,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_MP_PROFILES_LIST_INITIALIZE,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_MP_PROFILES_LIST_DISPOSE,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_MP_PROFILE_SET_FOR_GAME,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_SWAP_PLAYER_TEAM,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_NET_GAME_JOIN_PLAYER,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_PLAYER_PROFILE_LIST_INITIALIZE,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_PLAYER_PROFILE_LIST_DISPOSE,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_3WIDE_PLYR_PROF_SET_FOR_GAME,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_1WIDE_PLYR_PROF_SET_FOR_GAME,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_MP_PROFILE_BEGIN_EDITING,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_MP_PROFILE_END_EDITING,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_MP_PROFILE_SET_GAME_ENGINE,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_MP_PROFILE_CHANGE_NAME,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_MP_PROFILE_SET_CTF_RULES,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_MP_PROFILE_SET_KOTH_RULES,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_MP_PROFILE_SET_SLAYER_RULES,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_MP_PROFILE_SET_ODDBALL_RULES,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_MP_PROFILE_SET_RACING_RULES,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_MP_PROFILE_SET_PLAYER_OPTIONS,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_MP_PROFILE_SET_ITEM_OPTIONS,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_MP_PROFILE_SET_INDICATOR_OPTS,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_MP_PROFILE_INIT_GAME_ENGINE,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_MP_PROFILE_INIT_NAME,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_MP_PROFILE_INIT_CTF_RULES,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_MP_PROFILE_INIT_KOTH_RULES,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_MP_PROFILE_INIT_SLAYER_RULES,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_MP_PROFILE_INIT_ODDBALL_RULES,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_MP_PROFILE_INIT_RACING_RULES,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_MP_PROFILE_INIT_PLAYER_OPTS,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_MP_PROFILE_INIT_ITEM_OPTIONS,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_MP_PROFILE_INIT_INDICATOR_OPTS,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_MP_PROFILE_SAVE_CHANGES,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_COLOR_PICKER_MENU_INITIALIZE,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_COLOR_PICKER_MENU_DISPOSE,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_COLOR_PICKER_SELECT_COLOR,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_PLAYER_PROFILE_BEGIN_EDITING,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_PLAYER_PROFILE_END_EDITING,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_PLAYER_PROFILE_CHANGE_NAME,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_PLAYER_PROFILE_SAVE_CHANGES,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_PLYR_PRF_INIT_CNTL_SETTINGS,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_PLYR_PRF_INIT_ADV_CNTL_SET,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_PLYR_PRF_SAVE_CNTL_SETTINGS,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_PLYR_PRF_SAVE_ADV_CNTL_SET,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_MP_GAME_PLAYER_QUIT,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_MAIN_MENU_SWITCH_TO_SOLO_GAME,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_REQUEST_DEL_PLAYER_PROFILE,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_REQUEST_DEL_PLAYLIST_PROFILE,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_FINAL_DEL_PLAYER_PROFILE,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_FINAL_DEL_PLAYLIST_PROFILE,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_CANCEL_PROFILE_DELETE,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_CREATE_EDIT_PLAYLIST_PROFILE,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_CREATE_EDIT_PLAYER_PROFILE,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_NET_GAME_SPEED_START,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_NET_GAME_DELAY_START,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_NET_SERVER_ACCEPT_CONX,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_NET_SERVER_DEFER_START,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_NET_SERVER_ALLOW_START,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_DISABLE_IF_NO_XDEMOS,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_RUN_XDEMOS,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_SP_RESET_CONTROLLER_CHOICES,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_SP_SET_P1_CONTROLLER_CHOICE,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_SP_SET_P2_CONTROLLER_CHOICE,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_ERROR_IF_NO_NETWORK_CONNECTION,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_START_SERVER_IF_NONE_ADVERTISED,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_NET_GAME_UNJOIN_PLAYER,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_CLOSE_IF_NOT_EDITING_PROFILE,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_EXIT_TO_XBOX_DASHBOARD,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_NEW_CAMPAIGN_CHOSEN,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_NEW_CAMPAIGN_DECISION,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_POP_HISTORY_STACK_ONCE,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_DIFFICULTY_MENU_INIT,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_BEGIN_MUSIC_FADE_OUT,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_NEW_GAME_IF_NO_PLYR_PROFILES,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_EXIT_GRACEFULLY_TO_XBOX_DASHBOARD,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_PAUSE_GAME_INVERT_PITCH,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_START_NEW_COOP_GAME,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_PAUSE_GAME_INVERT_SPINNER_GET,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_PAUSE_GAME_INVERT_SPINNER_SET,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_MAIN_MENU_QUIT_GAME,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_MOUSE_EMIT_ACCEPT_EVENT,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_MOUSE_EMIT_BACK_EVENT,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_MOUSE_EMIT_DPAD_LEFT_EVENT,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_MOUSE_EMIT_DPAD_RIGHT_EVENT,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_MOUSE_SPINNER_3WIDE_CLICK,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_CONTROLS_SCREEN_INIT,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_VIDEO_SCREEN_INIT,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_CONTROLS_BEGIN_BINDING,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_GAMESPY_SCREEN_INIT,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_GAMESPY_SCREEN_DISPOSE,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_GAMESPY_SELECT_HEADER,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_GAMESPY_SELECT_ITEM,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_GAMESPY_SELECT_BUTTON,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_PLR_PROF_INIT_MOUSE_SET,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_PLR_PROF_CHANGE_MOUSE_SET,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_PLR_PROF_INIT_AUDIO_SET,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_PLR_PROF_CHANGE_AUDIO_SET,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_PLR_PROF_CHANGE_VIDEO_SET,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_CONTROLS_SCREEN_DISPOSE,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_CONTROLS_SCREEN_CHANGE_SET,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_MOUSE_EMIT_X_EVENT,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_GAMEPAD_SCREEN_INIT,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_GAMEPAD_SCREEN_DISPOSE,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_GAMEPAD_SCREEN_CHANGE_GAMEPADS,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_GAMEPAD_SCREEN_SELECT_ITEM,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_MOUSE_SCREEN_DEFAULTS,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_AUDIO_SCREEN_DEFAULTS,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_VIDEO_SCREEN_DEFAULTS,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_CONTROLS_SCREEN_DEFAULTS,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_PROFILE_SET_EDIT_BEGIN,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_PROFILE_MANAGER_DELETE,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_PROFILE_MANAGER_SELECT,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_GAMESPY_DISMISS_ERROR,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_SERVER_SETTINGS_INIT,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_SS_EDIT_SERVER_NAME,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_SS_EDIT_SERVER_PASSWORD,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_SS_START_GAME,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_VIDEO_TEST_DIALOG_INIT,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_VIDEO_TEST_DIALOG_DISPOSE,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_VIDEO_TEST_DIALOG_ACCEPT,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_GAMESPY_DISMISS_FILTERS,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_GAMESPY_UPDATE_FILTER_SETTINGS,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_GAMESPY_BACK_HANDLER,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_MOUSE_SPINNER_1WIDE_CLICK,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_CONTROLS_BACK_HANDLER,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_CONTROLS_ADVANCED_LAUNCH,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_CONTROLS_ADVANCED_OK,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_MP_PAUSE_MENU_OPEN,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_MP_GAME_OPTIONS_OPEN,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_MP_CHOOSE_TEAM,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_MP_PROF_INIT_VEHICLE_OPTIONS,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_MP_PROF_SAVE_VEHICLE_OPTIONS,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_SINGLE_PREV_CL_ITEM_ACTIVATED,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_MP_PROF_INIT_TEAMPLAY_OPTIONS,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_MP_PROF_SAVE_TEAMPLAY_OPTIONS,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_MP_GAME_OPTIONS_CHOOSE,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_EMIT_CUSTOM_ACTIVATION_EVENT,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_PLR_PROF_CANCEL_AUDIO_SET,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_PLR_PROF_INIT_NETWORK_OPTIONS,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_PLR_PROF_SAVE_NETWORK_OPTIONS,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_CREDITS_POST_RENDER,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_DIFFICULTY_ITEM_SELECT,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_CREDITS_INITIALIZE,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_CREDITS_DISPOSE,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_GAMESPY_GET_PATCH,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_VIDEO_SCREEN_DISPOSE,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_CAMPAIGN_MENU_INIT,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_CAMPAIGN_MENU_CONTINUE,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_LOAD_GAME_MENU_INIT,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_LOAD_GAME_MENU_DISPOSE,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_LOAD_GAME_MENU_ACTIVATED,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_SOLO_MENU_SAVE_CHECKPOINT,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_MP_TYPE_SET_MODE,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_CHECKING_FOR_UPDATES_OK,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_CHECKING_FOR_UPDATES_DISMISS,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_DIRECT_IP_CONNECT_INIT,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_DIRECT_IP_CONNECT_GO,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_DIRECT_IP_EDIT_FIELD,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_NETWORK_SETTINGS_EDIT_A_PORT,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_NETWORK_SETTINGS_DEFAULTS,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_LOAD_GAME_MENU_DELETE_REQUEST,
		U_I_EVENT_HANDLER_REFERENCE_FUNCTION_LOAD_GAME_MENU_DELETE_FINISH,
	};

	enum UIReplaceFunction : std::uint16_t {
		U_I_REPLACE_FUNCTION_NULL = 0,
		U_I_REPLACE_FUNCTION_WIDGET_S_CONTROLLER,
		U_I_REPLACE_FUNCTION_BUILD_NUMBER,
		U_I_REPLACE_FUNCTION_PID,
	};

	enum UIWidgetType : std::uint16_t {
		U_I_WIDGET_TYPE_CONTAINER = 0,
		U_I_WIDGET_TYPE_TEXT_BOX,
		U_I_WIDGET_TYPE_SPINNER_LIST,
		U_I_WIDGET_TYPE_COLUMN_LIST,
		U_I_WIDGET_TYPE_GAME_MODEL_NOT_IMPLEMENTED,
		U_I_WIDGET_TYPE_MOVIE_NOT_IMPLEMENTED,
		U_I_WIDGET_TYPE_CUSTOM_NOT_IMPLEMENTED,
	};

	enum UIControllerIndex : std::uint16_t {
		U_I_CONTROLLER_INDEX_PLAYER_1 = 0,
		U_I_CONTROLLER_INDEX_PLAYER_2,
		U_I_CONTROLLER_INDEX_PLAYER_3,
		U_I_CONTROLLER_INDEX_PLAYER_4,
		U_I_CONTROLLER_INDEX_ANY_PLAYER,
	};

	enum UIJustification : std::uint16_t {
		U_I_JUSTIFICATION_LEFT_JUSTIFY = 0,
		U_I_JUSTIFICATION_RIGHT_JUSTIFY,
		U_I_JUSTIFICATION_CENTER_JUSTIFY,
	};

	struct EventHandlerReferencesFlags {
		std::uint32_t close_current_widget : 1;
		std::uint32_t close_other_widget : 1;
		std::uint32_t close_all_widgets : 1;
		std::uint32_t open_widget : 1;
		std::uint32_t reload_self : 1;
		std::uint32_t reload_other_widget : 1;
		std::uint32_t give_focus_to_widget : 1;
		std::uint32_t run_function : 1;
		std::uint32_t replace_self_w_widget : 1;
		std::uint32_t go_back_to_previous_widget : 1;
		std::uint32_t run_scenario_script : 1;
		std::uint32_t try_to_branch_on_failure : 1;
	};
	static_assert(sizeof(EventHandlerReferencesFlags) == sizeof(std::uint32_t));

	struct ConditionalWidgetReferenceFlags {
		std::uint32_t load_if_event_handler_function_fails : 1;
	};
	static_assert(sizeof(ConditionalWidgetReferenceFlags) == sizeof(std::uint32_t));

	struct ChildWidgetReferenceFlags {
		std::uint32_t use_custom_controller_index : 1;
	};
	static_assert(sizeof(ChildWidgetReferenceFlags) == sizeof(std::uint32_t));

	struct UIWidgetDefinitionFlags {
		std::uint32_t pass_unhandled_events_to_focused_child : 1;
		std::uint32_t pause_game_time : 1;
		std::uint32_t flash_background_bitmap : 1;
		std::uint32_t dpad_up_down_tabs_thru_children : 1;
		std::uint32_t dpad_left_right_tabs_thru_children : 1;
		std::uint32_t dpad_up_down_tabs_thru_list_items : 1;
		std::uint32_t dpad_left_right_tabs_thru_list_items : 1;
		std::uint32_t dont_focus_a_specific_child_widget : 1;
		std::uint32_t pass_unhandled_events_to_all_children : 1;
		std::uint32_t render_regardless_of_controller_index : 1;
		std::uint32_t pass_handled_events_to_all_children : 1;
		std::uint32_t return_to_main_menu_if_no_history : 1;
		std::uint32_t always_use_tag_controller_index : 1;
		std::uint32_t always_use_nifty_render_fx : 1;
		std::uint32_t dont_push_history : 1;
		std::uint32_t force_handle_mouse : 1;
	};
	static_assert(sizeof(UIWidgetDefinitionFlags) == sizeof(std::uint32_t));

	struct UIWidgetDefinitionFlags1 {
		std::uint32_t editable : 1;
		std::uint32_t password : 1;
		std::uint32_t flashing : 1;
		std::uint32_t dont_do_that_weird_focus_test : 1;
	};
	static_assert(sizeof(UIWidgetDefinitionFlags1) == sizeof(std::uint32_t));

	struct UIWidgetDefinitionFlags2 {
		std::uint32_t list_items_generated_in_code : 1;
		std::uint32_t list_items_from_string_list_tag : 1;
		std::uint32_t list_items_only_one_tooltip : 1;
		std::uint32_t list_single_preview_no_scroll : 1;
	};
	static_assert(sizeof(UIWidgetDefinitionFlags2) == sizeof(std::uint32_t));

	struct GameDataInputReference {
		Memory::BigEndian<UIGameDataInputReferenceFunction> function;
		PADDING(2);
		PADDING(32);
	};
	static_assert(sizeof(GameDataInputReference) == 36);

	struct EventHandlerReference {
		Memory::BigEndian<EventHandlerReferencesFlags> flags;
		Memory::BigEndian<UIEventType> event_type;
		Memory::BigEndian<UIEventHandlerReferenceFunction> function;
		TagDependency widget_tag;
		TagDependency sound_effect;
		TagString script;
	};
	static_assert(sizeof(EventHandlerReference) == 72);

	struct SearchAndReplaceReference {
		TagString search_string;
		Memory::BigEndian<UIReplaceFunction> replace_function;
	};
	static_assert(sizeof(SearchAndReplaceReference) == 34);

	struct ConditionalWidgetReference {
		TagDependency widget_tag;
		TagString name;
		Memory::BigEndian<ConditionalWidgetReferenceFlags> flags;
		Index custom_controller_index;
		PADDING(26);
	};
	static_assert(sizeof(ConditionalWidgetReference) == 80);

	struct ChildWidgetReference {
		TagDependency widget_tag;
		TagString name;
		Memory::BigEndian<ChildWidgetReferenceFlags> flags;
		Index custom_controller_index;
		Memory::BigEndian<std::int16_t> vertical_offset;
		Memory::BigEndian<std::int16_t> horizontal_offset;
		PADDING(22);
	};
	static_assert(sizeof(ChildWidgetReference) == 80);

	struct UiWidgetDefinition {
		Memory::BigEndian<UIWidgetType> widget_type;
		Memory::BigEndian<UIControllerIndex> controller_index;
		TagString name;
		Rectangle2D bounds;
		Memory::BigEndian<UIWidgetDefinitionFlags> flags;
		Memory::BigEndian<std::int32_t> milliseconds_to_auto_close;
		Memory::BigEndian<std::int32_t> milliseconds_auto_close_fade_time;
		TagDependency background_bitmap;
		TagBlock<GameDataInputReference> game_data_inputs;
		TagBlock<EventHandlerReference> event_handlers;
		TagBlock<SearchAndReplaceReference> search_and_replace_functions;
		PADDING(128);
		TagDependency text_label_unicode_strings_list;
		TagDependency text_font;
		ColorARGB text_color;
		Memory::BigEndian<UIJustification> justification;
		Memory::BigEndian<UIWidgetDefinitionFlags1> flags_1;
		PADDING(12);
		Index string_list_index;
		Memory::BigEndian<std::int16_t> horiz_offset;
		Memory::BigEndian<std::int16_t> vert_offset;
		PADDING(26);
		PADDING(2);
		Memory::BigEndian<UIWidgetDefinitionFlags2> flags_2;
		TagDependency list_header_bitmap;
		TagDependency list_footer_bitmap;
		Rectangle2D header_bounds;
		Rectangle2D footer_bounds;
		PADDING(32);
		TagDependency extended_description_widget;
		PADDING(32);
		PADDING(256);
		TagBlock<ConditionalWidgetReference> conditional_widgets;
		PADDING(128);
		PADDING(128);
		TagBlock<ChildWidgetReference> child_widgets;
	};
	static_assert(sizeof(UiWidgetDefinition) == 1004);

}

#pragma pack(pop)

#endif

